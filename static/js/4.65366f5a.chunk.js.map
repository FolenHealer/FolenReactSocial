{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/Dialog/Dialog.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","classes","dialog","img","src","alt","to","link","name","Message","message","text","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","textarea","placeholder","btn","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialog__items","post__message","values","postMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,cAAgB,+BAA+B,SAAW,0BAA0B,IAAM,uB,oBCAnOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,IAAM,sB,oBCApFD,EAAOC,QAAU,CAAC,QAAU,2B,iHCYbC,EATA,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,QACpB,yBAAKF,UAAWC,IAAQE,IAAKC,IAAI,4BAA4BC,IAAI,KACjE,kBAAC,IAAD,CAASC,GAAIR,EAAME,UAAWC,IAAQM,MAAOV,EAAMW,Q,kBCChDC,EAPC,SAACZ,GACb,OACI,yBAAKG,UAAWC,IAAQS,SACfb,EAAMc,O,yCCGjBC,EAAeC,YAAiB,IAwChCC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAfL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cACd,kBAACC,EAAA,EAAD,CACIX,KAAM,iBACNY,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBZ,UAAWC,IAAQuB,SACnBC,YAAY,0FAChB,4BAAQzB,UAAWC,IAAQyB,KAA3B,+GAODC,EAxCC,SAAC9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAEhC,GAAIA,GAAIgC,EAAEhC,QAChFkC,EAAmBpC,EAAMqC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,KAAMwB,EAAExB,KAAMqB,IAAKG,EAAEpC,GAAIA,GAAIoC,EAAEpC,QAKvF,OAAIF,EAAMuC,OAEN,yBAAKpC,UAAWC,IAAQ4B,SACpB,yBAAK7B,UAAWC,IAAQoC,eACnBT,GAEL,yBAAK5B,UAAWC,IAAQiC,UACnBD,EACD,yBAAKjC,UAAWC,IAAQqC,eACpB,kBAACxB,EAAD,CAAqBG,SAZjB,SAACsB,GACjB1C,EAAM2C,YAAYD,EAAOE,sBAEJ,kBAAC,IAAD,CAAUnC,GAAI,Y,wCCdvCoC,EAA6B,SAACC,GAAD,MAAY,CAACP,OAAQO,EAAMC,KAAKR,S,OCelDS,sBAAQC,aAZD,SAACH,GACnB,MAAO,CACHd,QAASc,EAAMI,YAAYlB,QAC3BK,SAAUS,EAAMI,YAAYb,SAC5BO,eAAgBE,EAAMI,YAAYN,mBAGjB,SAACO,GACtB,MAAO,CACHR,YAAa,SAACC,GAAoBO,EAASC,YAAwBR,UDV3C,SAACS,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKvD,MAAMuC,OACT,kBAACc,EAAcE,KAAKvD,OADI,kBAAC,IAAD,CAAUS,GAAI,eAHV,GACX+C,IAAMH,WAUtC,OAFqCJ,YAAQJ,EAARI,CAAoCK,KCI9DN,CAAwElB","file":"static/js/4.65366f5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1vg6l\",\"dialog__items\":\"Dialogs_dialog__items__12GnZ\",\"messages\":\"Dialogs_messages__sYkpD\",\"post__message\":\"Dialogs_post__message__2n-Lx\",\"textarea\":\"Dialogs_textarea__2Rlcw\",\"btn\":\"Dialogs_btn__hxWaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__-JFZ7\",\"link\":\"Dialog_link__1xRp8\",\"img\":\"Dialog_img__2PcsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__11WwN\"};","import React from 'react';\r\nimport classes from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img className={classes.img} src=\"https://placehold.it/30/0\" alt=\"\"/>\r\n            <NavLink to={path} className={classes.link}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialog;","import classes from \"./Message.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n                {props.text}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\n\r\nconst maxLength100 = maxLengthCreator(10)\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <Dialog name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <Message text={m.text} key={m.id} id={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.postMessage(values.newMessageBody)\r\n    }\r\n    if(!props.isAuth) return <Redirect to={'/login'} />\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialog__items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <div className={classes.post__message}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={TextArea}\r\n                    validate={[required, maxLength100 ]}\r\n                    className={classes.textarea}\r\n                    placeholder='Введи сообщение'/>\r\n                <button className={classes.btn}>\r\n                    Добавить сообщение\r\n                </button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {addMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        postMessage: (newMessageBody) => {dispatch(addMessageActionCreator(newMessageBody))}\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}