{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/Post/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","statusContainer","nowStatusContainer","onDoubleClick","nowStatus","editStatus","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","profile","handleSubmit","onSubmit","userItem","statusTitleContainer","fullName","createField","Input","TextArea","type","contactsContainer","contactsTitle","contacts","keys","map","key","contactItem","ProfileData","isOwner","goToEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contacts","ProfileInfo","savePhoto","saveProfile","user","src","photos","large","userPhoto","avatar","target","files","initialValues","formData","Post","post","ailsContainer","ailsText","ailCount","message","maxLength10","maxLengthCreator","AddNewPostForm","Field","validate","required","name","textarea","component","placeholder","btn","MyPosts","console","log","postsElements","posts","reverse","p","id","container","title","flexBox","values","addPost","newPostBody","item","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","isFetching","u","pdateStatus","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.037276b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ProfileInfo_bg__2WlRC\",\"img\":\"ProfileInfo_img__3I1jl\",\"userItem\":\"ProfileInfo_userItem__1exvC\",\"avatar\":\"ProfileInfo_avatar__LsuZU\",\"fullName\":\"ProfileInfo_fullName__374R6\",\"contactsContainer\":\"ProfileInfo_contactsContainer__2eVeT\",\"contacts\":\"ProfileInfo_contacts__1MPBT\",\"contactsTitle\":\"ProfileInfo_contactsTitle__3w1Id\",\"contactItem\":\"ProfileInfo_contactItem__RGYqk\",\"statusContainer\":\"ProfileInfo_statusContainer__15VEp\",\"status\":\"ProfileInfo_status__1Qzm-\",\"nowStatusContainer\":\"ProfileInfo_nowStatusContainer__36G9Q\",\"nowStatus\":\"ProfileInfo_nowStatus__2XQj9\",\"editStatus\":\"ProfileInfo_editStatus__r1_nw\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1_ScT\",\"title\":\"MyPosts_title__2aoHO\",\"flexBox\":\"MyPosts_flexBox__2Mf1q\",\"textarea\":\"MyPosts_textarea__1FE_W\",\"btn\":\"MyPosts_btn__sx0nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2Kh_2\",\"message\":\"Post_message__isG8D\",\"ailsContainer\":\"Post_ailsContainer__1rYHQ\",\"ailsText\":\"Post_ailsText__1XoR6\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() =>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    return <>\r\n        <div className={classes.statusContainer}>\r\n            <div className={classes.status}>\r\n                {!editMode &&\r\n                <div className={classes.nowStatusContainer}>\r\n                        <span\r\n                            onDoubleClick={activateEditMode}\r\n                            className={classes.nowStatus}>\r\n                            {props.status || 'fuck you'}\r\n                        </span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div className={classes.editStatus}>\r\n                    <input\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        onChange={onStatusChange}\r\n                        value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <>\r\n            <div className={classes.statusContainer}>\r\n                <div className={classes.status}>\r\n                    {!this.state.editMode &&\r\n                    <div className={classes.nowStatusContainer}>\r\n                        <span\r\n                            onDoubleClick={this.activateEditMode}\r\n                            className={classes.nowStatus}>\r\n                            {this.props.status || 'fuck you'}\r\n                        </span>\r\n                    </div>\r\n                    }\r\n                    {this.state.editMode &&\r\n                    <div className={classes.editStatus}>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            onChange={this.onStatusChange}\r\n                            value={this.state.status}/>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, TextArea} from \"../../common/FormsControl/FormsControl\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={classes.userItem}>\r\n            <div className={classes.statusTitleContainer}>\r\n                <div className={classes.fullName}>\r\n                    {createField(\"Full NAME\", \"fullName\", [], Input)}\r\n                </div>\r\n                <div>\r\n                    About me:\r\n                    {createField(\"Write about yourself\", \"aboutMe\", [], TextArea)}\r\n                </div>\r\n                <div>\r\n                    Looking for a job:\r\n                    {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n                </div>\r\n                <div>\r\n                    Description:\r\n                    {createField(\"Description\", \"lookingForAJobDescription\", [], TextArea)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={classes.contactsContainer}>\r\n            <h2 className={classes.contactsTitle}>CONTACTS</h2>\r\n            <div className={classes.contacts}>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <div className={classes.contactItem}>{key}:\r\n                        {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button>SAVE</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport Loader from \"../../common/loader/loader\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\"\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto,saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false) /*HOOKS FOR EDIT MODE FORM PROFILE*/\r\n    if (!profile) {return <Loader/>} /*IF NO PROFILE DISPLAY LOADER*/\r\n    const onMainPhotoSelected = (e) => { /*ON CHANGE PHOTO*/\r\n        if (e.target.files.length) { /*IF YES PHOTO IN ARRAY FILES*/\r\n            savePhoto(e.target.files[0]) /*SET NEW PHOTO IN PROFILE*/\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.user}>\r\n                <div className={classes.userItem}>\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n                         className={classes.avatar}/>\r\n                    {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        profile={profile}\r\n                        initialValues={profile}\r\n                        onSubmit={onSubmit}\r\n                    />\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={() =>{setEditMode(true)}}/>\r\n                }\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <>\r\n        <div className={classes.userItem}>\r\n            <div className={classes.statusTitleContainer}>\r\n                <div className={classes.fullName}>{profile.fullName}</div>\r\n                <div>About me: {profile.aboutMe}</div>\r\n                <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                {profile.lookingForAJob && <div>Description: {profile.lookingForAJobDescription}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={classes.contactsContainer}>\r\n            <h2 className={classes.contactsTitle}>CONTACTS</h2>\r\n            <div className={classes.contacts}>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contacts\r\n                        key={key}\r\n                        contactTitle={key}\r\n                        contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n        {isOwner &&  <div><button onClick={goToEditMode}>EDIT MODE</button></div>}\r\n    </>\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contactItem}>\r\n        <div>{contactTitle} : {contactValue}</div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.ailsContainer}>\r\n            <img src='https://placehold.it/50/1'></img>\r\n                <div><span className={classes.ailsText}>AILS</span>{props.ailCount}</div>\r\n            </div>\r\n            <div className={classes.message}>{props.message}</div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst  MyPosts = (props) =>{\r\n\r\n    console.log('renderMP')\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} key={p.id} ailCount={p.ailCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            <h3 className={classes.title}>My posts</h3>\r\n            <div className={classes.flexBox}>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.item}>{postsElements}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction AddNewPostForm(props) {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                validate={[required, maxLength10]}\r\n                name={\"newPostBody\"}\r\n                className={classes.textarea}\r\n                component={TextArea}\r\n                placeholder='Введи сообщение'/>\r\n        </div>\r\n        <div>\r\n            <button className={classes.btn}>\r\n                Add post\r\n            </button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts;","import MyPosts from \"../MyPosts\";\r\nimport {addPostActionCreator} from \"../../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostBody: state.profilePage.newPostBody\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost:(newPostBody) => {dispatch(addPostActionCreator(newPostBody))},\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isFetching={props.isFetching}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status} u\r\n                pdateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isFetching: state.isFetching\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    /*WithAuthRedirect*/\r\n)(ProfileContainer)"],"sourceRoot":""}